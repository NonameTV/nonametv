#!/usr/bin/perl -w

use strict;

use FindBin;
use lib "$FindBin::Bin/../lib";

use NonameTV;
use NonameTV::DataStore;
use NonameTV::Config qw/ReadConfig/;

use Getopt::Long;
use Text::CSV_XS;

my $opt = { };

my $res = GetOptions( $opt, qw// );

if( scalar( @ARGV ) != 2 )
{
  print << 'EOHELP';
nonametv-dumpdb <data-directory> <country>

Dump the contents of the database in a format suitable for inclusion
in a revision-control system.

Note that only tables that contain configuration is included. Tables
that contain data generated by the Importers are not included.

The following tables are included:

channels
channelgroups
trans_cat
languagestrings
epgservers
dvb_cat
networks
services
transportstreams

EOHELP

  exit 1;
}

my( $datadir, $country ) = @ARGV;

# Read configuration
my $conf = ReadConfig();

my $ds = NonameTV::DataStore->new( $conf->{DataStore} );

dump_structure( "$datadir/listings.sql" );

dump_table( $ds, "languagestrings", "$datadir/languagestrings.txt" );
dump_table( $ds, "dvb_cat", "$datadir/dvb_cat.txt" );

dump_table( $ds, "channels", "$datadir/$country/channels.txt" );
dump_table( $ds, "channelgroups", "$datadir/$country/channelgroups.txt" );
dump_table( $ds, "trans_cat", "$datadir/$country/trans_cat.txt",
	    "not (program_type='' and category='')" );
dump_table( $ds, "epgservers", "$datadir/$country/epgservers.txt" );
dump_table( $ds, "networks", "$datadir/$country/networks.txt" );
dump_table( $ds, "services", "$datadir/$country/services.txt" );
dump_table( $ds, "transportstreams", "$datadir/$country/transportstreams.txt" );

sub dump_structure {
  my( $outfile ) = @_;

  my $dbuser = $conf->{DataStore}->{username};
  my $dbpassword = $conf->{DataStore}->{password};
  my $dbname = $conf->{DataStore}->{dbname};

  print "Writing database structure to $outfile\n";

  my @tables = qw/
      batches channels channelgroups files
      programs state trans_cat languagestrings
      epgservers dvb_cat networks services transportstreams
      /;

  my $command = "--add-drop-table --no-data " . join( " ", @tables );

  my $pw="";
  if( length( $dbpassword ) > 0 ) {
    $pw = "-p$dbpassword";
  }

  my $output = qx/mysqldump -u$dbuser $pw $dbname $command/;

  # Remove comments
  $output =~ s(/\*.*?\*/;\n)()gm;
  $output =~ s(^--.*\n)()gm;
  $output =~ s(^\n*)();
  $output =~ s(\n\n\n)(\n\n)g;

  # Remove AUTO_INCREMENT specification. It seems to be added
  # on some systems but not on others and it messes up
  # real changes.
  $output =~ s( AUTO_INCREMENT=\d+)()gm;

  open( OUT, "> $outfile" ) or die "Failed to write to $outfile";
  print OUT $output;
  close( OUT );
}

sub dump_table {
  my( $ds, $table, $file, $where ) = @_;

  print "Dumping table $table to file $file\n";

  my $out = new IO::File( "> $file" ) 
      or die "Failed to open $file for writing";

  my $csv = Text::CSV_XS->new({eol=> "\n", 'binary' => 1});

  my $sql = "SELECT * from $table";
  if( defined $where ) {
    $sql .= " WHERE $where";
  }

  my( $res, $sth ) = $ds->sa->Sql( $sql );

  if( defined( $sth ) ) {
    while( my $row = $sth->fetchrow_arrayref ) {
      foreach (@{$row}) {
	$_='\N' if not defined( $_ );
      }
      $csv->print( $out, $row );
    }

    $sth->finish();
  }

  $out->close();
}
