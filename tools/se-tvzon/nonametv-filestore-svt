#!/usr/bin/perl -w

use strict;

use FindBin;
use lib "$FindBin::Bin/../lib";

use DateTime;
use File::Util;
use File::Copy qw/copy move/;

use NonameTV;
use NonameTV::DataStore;
use NonameTV::Config qw/ReadConfig/;
use NonameTV::Log qw/progress error d p w f/;

use Getopt::Long;

my $opt = { 'verbose' => 0 };

my $res = GetOptions( $opt, qw/verbose/ );

NonameTV::Log::SetVerbosity( $opt->{verbose} );

# Read configuration
my $conf = ReadConfig();
my $ds = NonameTV::DataStore->new( $conf->{DataStore} );
my $filestore = $conf->{FileStore};

# Channels
my %channel_data;
$channel_data{ "24" } = "svt24.svt.se";
$channel_data{ "SVT1" } = "svt1.svt.se";
$channel_data{ "SVT2" } = "svt2.svt.se";
$channel_data{ "SVTB" } = "svtb.svt.se";
$channel_data{ "SVTE" } = "svtworld.svt.se";
$channel_data{ "SVTK" } = "kunskapskanalen.svt.se";


  # list files inside of the channel directory and check when they have been touched
  my( $cf ) = File::Util->new();
  my( @cffiles ) = $cf->list_dir( "/nonametv/autoupload/svt", '--no-fsdots' );
  foreach my $cff (@cffiles)
  {
    my $org_cff = $cff;
    $cff =~ s/SVT_SCHEDULE_//g if $cff;

    my ( $id, $date, $enddate ) = split(/_/, $cff);

    my $cftype = join(',', File::Util->file_type( "/nonametv/autoupload/svt/$cff" ) );
    my $fsftype = join(',', File::Util->file_type( "/nonametv/autoupload/svt/$cff" ) );

    if( not exists( $channel_data{$id} ) )
    {
        print "Files with name $id hasnt been specified as a channel.\n";
        unlink "/nonametv/autoupload/svt/$org_cff";
    } else {
      move( "/nonametv/autoupload/svt/$org_cff", "$filestore/$channel_data{$id}/$org_cff" );
      print "$cff moved to $channel_data{$id}\n";
    }

  }

exit;