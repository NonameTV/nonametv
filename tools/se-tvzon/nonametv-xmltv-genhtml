#!/usr/bin/perl -w

use File::Copy;
use POSIX qw(strftime);
# How large an empty xmltv-file can be.
use constant EMPTY_SIZE => 200;

use strict;

my $today = strftime "%m-%d", localtime;

if( scalar( @ARGV ) != 1 )
{
  print << 'EODOC';
nonametv-xmltv-genhtml <dir>

Generate a table with data for each day and channel. The .xml.gz-files
should be located in <dir> and the table will be written to 
<dir>/00index.html.

Furthermore, the program generates a file 00logos.html that contains
a list of all channels and shows their logos.

If the result of nonametv-xmltv-genhtml is identical to the previous
content of 00index.html, the original file will be left untouched.

EODOC

  exit 1;
}

my( $dir ) = @ARGV;

# Build list of files
my %files;

foreach my $file ( glob("$dir/*.xml.gz") )
{
  my( $name ) = ($file =~ m%/([^/]+_\d{4}-\d{2}-\d{2}).xml.gz%);
  $files{$name} = "X" if defined $name;
}

foreach my $file (keys %files)
{
  if( -s( "$dir/$file.xml.gz" ) < EMPTY_SIZE  )
  {
    # File is empty.
    $files{$file} = "E";
    next;
  }
}

my %channels;
my %dates;

foreach my $file (keys %files)
{
  my( $channel, $date ) = split( "_", $file );

  $channels{$channel} = 1;
  $dates{$date} = 1;
}

open OUT, "> $dir/00index.html.new" 
  or die "Failed to open output file: $@";

print OUT << "EOHEAD";
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" 
   "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
<link rel="stylesheet" type="text/css" href="http://converter.xmltv.se/css/modern.css"/>
<style type="text/css">
  .X {  text-align: center; background-color: #90EE90; }
  .E {  text-align: center; background-color: #FF6347; }
  td.today { background-color: #A0FFA0; }
  th.today { background-color: #000; color: #FFF; }
</style>
<title>Channel status</title>
<!-- today: $today -->
</head>
<body>
<h1>Data status</h1>
<p>E=Doesnt Exist - X=Exists</p>
<table>
<thead>
  <tr>
  	<th></th>
    <th>Channel</th>
EOHEAD

foreach my $date (sort keys %dates)
{
  my( $s ) = ($date =~ m/(\d\d-\d\d)$/);
  if ($s ne $today) {
  	print OUT "    <th scope='col'>$s</th>\n";
  } else {
  	print OUT "    <th scope='col' class='today'>$s</th>\n";
  }
  
  #print OUT "    <td>$s</td>\n";
}

print OUT << "EOD";
  </tr>
</thead>
<tbody>

EOD

foreach my $channel (sort keys %channels)
{
  print OUT << "EOD";
<tr>
	<th scope='row'><img src='http://xmltv.se/chanlogos/44x44/$channel.png' /></th>
  <th scope='row'><a href='http://converter.xmltv.se/channel?x=$channel'>$channel</a></th>

EOD

  foreach my $date (sort keys %dates)
  {
    my $file = "${channel}_$date";
    $files{$file} = ' ' unless defined $files{$file};
    my $short = substr( $date, 5, 5 );
    #print OUT "<!-- $short - $today -->";
    if( $files{$file} eq 'U' )
    {
      print OUT "<td class='$files{$file}'><a href='http://xmltv.xmltv.se/$file.diff'>$files{$file}</a></td>";
    }
    else
    {
      if ($short ne $today) {
      	print OUT "<td class='$files{$file}'><a href='http://xmltv.xmltv.se/displayfile.html?$file'>$files{$file}</a></td>";
      } else {
      	print OUT "<td class='$files{$file} today'><a href='http://xmltv.xmltv.se/displayfile.html?$file'>$files{$file}</a></td>";
      }
      
      #print OUT "<td class='$files{$file}'><a href='http://xmltv.xmltv.se/displayfile.html?$file'>$files{$file}</a></td>";
    }
  }

  print OUT "</tr>\n";
}

print OUT << "EOD";

</tbody>
</table>
</body>
</html>

EOD

close(OUT);
system("diff $dir/00index.html.new $dir/00index.html > /dev/null 2>&1");
if( $? )
{
  move( "$dir/00index.html.new", "$dir/00index.html" );
}
else
{
  unlink( "$dir/00index.html.new" );
}

open OUT, "> $dir/00logos.html.new" 
  or die "Failed to open output file: $@";

print OUT << "EOHEAD";
<html>
<head>
<link rel="stylesheet" type="text/css" href="http://converter.xmltv.se/css/modern.css"/>
<script language="JavaScript">
function changeBg(col)
{
  document.bgColor = col;
}

</script>

</head>
<body>
<h1>Logos</h1>
<p>Background:
<a href="javascript:changeBg('#ffffff')">White</a>
<a href="javascript:changeBg('#dddddd')">Light grey</a>
<a href="javascript:changeBg('#333333')">Dark grey</a>
<a href="javascript:changeBg('#000000')">Black</a>
<a href="javascript:changeBg('#0000dd')">Dark blue</a>
</p>
<table>
  
EOHEAD

foreach my $channel (sort keys %channels)
{
  print OUT << "EOREC";
<tr>
  <td>$channel</td>
  <td><img src="http://xmltv.se/chanlogos/$channel.png"></td>
  <td><img src="http://xmltv.se/chanlogos/44x44/$channel.png"></td>
  <td><img src="http://xmltv.se/chanlogos/16x16/$channel.png"></td>
</tr>

EOREC

}

print OUT << "EOFOOT";
</table>
</body>
</html>

EOFOOT

close(OUT);

update_if_changed( "$dir/00logos.html.new", "$dir/00logos.html" );
system( "zcat $dir/channels.xml.gz | xsltproc /home/jnylen/projects/nonametv/examples/channel-list.xsl - > $dir/channels.html.new" );

update_if_changed( "$dir/channels.html.new", "$dir/channels.html" );

sub update_if_changed {
  my( $new, $old ) = @_;

  system("diff $new $old > /dev/null 2>&1");
  if( $? ) {
    move( "$new", "$old" );
  }
  else {
    unlink( "$new" );
  }
}

