#!/usr/bin/perl -w

use strict;

use FindBin;
use lib "$FindBin::Bin/../lib";

use NonameTV;
use NonameTV::DataStore;
use NonameTV::Config qw/ReadConfig/;

use Getopt::Long;
use POSIX qw/strftime/;
use Template;

# Read configuration
my $conf = ReadConfig();

# Create Datastore
my $ds = NonameTV::DataStore->new( $conf->{DataStore} );

my $data = { 
  errors => [],
  warnings => [],
};

# Retrieve a list of all batches that have been aborted due to errors.
my( $res, $sth ) = $ds->sa->Sql( 
        "select * from batches where abort_message!='' order by name" );

while( my $d = $sth->fetchrow_hashref() ) {
  push @{$data->{errors}}, $d;
}

$sth->finish();

# Retrieve a list of all batches that generated a warning.
( $res, $sth ) = $ds->sa->Sql( 
        "select * from batches where message!='' order by name" );

while( my $d = $sth->fetchrow_hashref() )
{
  push @{$data->{warnings}}, $d;
}

$sth->finish();

GeneratePage( 'batchlog', $data );

sub GeneratePage {
  my( $templatename, $data ) = @_;

  my $config = {};

  $config->{INCLUDE_PATH} = [ "$FindBin::Bin/../templates/" ];
  if( defined( $NonameTV::Conf->{TemplateCountry} ) ) {
    unshift( @{$config->{INCLUDE_PATH}}, 
	     "$FindBin::Bin/../templates/$NonameTV::Conf->{TemplateCountry}" );
  }


  # create Template object
  my $template = Template->new($config);

  $template->process( $templatename, $data );
}

