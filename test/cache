#!/usr/bin/perl -w 

use strict;

use HTTP::Cache;

if( scalar( @ARGV ) != 1 )
{
  print << "EOD";
usage: cache <url>
Fetches a url via the HTTP::Cache module in verbose mode. Run the same
command twice to see if caching works with this server or not. On the
second invocation, the messages have the following meaning:

Fetching ... from server: 
The server returned a new page that was different
from the page that was fetched the previous time.
Caching didn't improve anything.


Fetching ... unchanged from server: 
The server indicated that caching was not possible, 
but still returned the exact same page as the last 
time. Caching didn't improve anything.


Fetching ... from cache: 
The server returned a short note saying that the
contents of the cache was still up-to-date. If the
page was big, the cache saved us a lot of bandwidth.

The cache is stored in the directory /tmp/cache. This directory must
exist and be empty before the command is run.

EOD

  exit;
}

my( $url ) = @ARGV;

my $c = HTTP::Cache->new( { 
  BasePath  => "/tmp/cache", # Directory to store the cache in. 
  Verbose   => 1,            # Print messages to STDERR. Default is 0.
  UserAgent => "my-spider",  # The user-agent string to use. Default
                             # is "perl-http-cache". 
} );

my $data = $c->get( $url );

